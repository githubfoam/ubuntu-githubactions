name: "ubuntu OpenSCAP CI workflow"


on:
  push:
    branches: [ test ]

jobs:

# https://ubuntu.com/security/certifications/docs/cis-installation
  ubuntu-1804-job:
    name: "OpenSCAP on ubuntu-18.04"
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    # - name: "install osquery"
    #   run: sudo sh scripts/install_osquery.sh      
    # - name: "DFIR osquery list"
    #   run: sh scripts/dfir_osquery.sh   
    - name: "Ubuntu OpenSCAP"
      run: |
        sudo apt-get install libopenscap8 wget  -yq
        # download the necessary OVAL definitions
        if wget --spider https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.bionic.cve.oval.xml 2>/dev/null; then
          echo "OVAL file exists"
        else
          echo "OVAL file does not exist"
        fi        
        wget https://people.canonical.com/~ubuntu-security/oval/com.ubuntu.bionic.cve.oval.xml
        # Run the audit 
        # https://wiki.ubuntu.com/Releases
        oscap oval eval --results /tmp/bionic_oscap_results.xml --report /tmp/oscap_report.html com.ubuntu.bionic.cve.oval.xml



  # ubuntu-latest-job:
  #   name: "ansible on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "check on ansible version"
  #     run: ansible --version

  # ubuntu-latest-python-virtualenv-ansible-job:
  #   name: "python-virtualenv ansible on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build virtualenv ansible "
  #     run: sudo make virtualenv-ansible     


  # ubuntu-latest-python-virtualenv-ansible-playbook:
  #   name: "python-virtualenv ansible playbook on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build virtualenv ansible "
  #     run: sudo make virtualenv-ansible     
  #   - name: "ansible locally"
  #     run: |
  #       # cat /etc/ansible/hosts #/etc/ansible/hosts: No such file or directory
  #       cat playbooks/localhost_playbook.yml 
  #       ansible-playbook playbooks/localhost_playbook.yml --check #dry-run mode
  #       ansible -m debug -a 'var=hostvars' localhost        
  #       ansible-inventory --inventory-file=inventory --list
  #       ansible-inventory --inventory-file=inventory --graph
  #       ansible-inventory --inventory-file=inventory --host localhost


  # ubuntu-latest-python-virtualenv-ansible-version-job:
  #   name: "python-virtualenv ansible(specific version) on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build virtualenv ansible version"
  #     run: sudo make virtualenv-ansible-specific     


   
     
 