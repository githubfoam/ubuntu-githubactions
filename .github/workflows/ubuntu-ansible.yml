name: "ubuntu ansible CI workflow"


on:
  push:
    branches: [ test ]

jobs:

  # ubuntu-1604-job:
  #   name: "osquery on ubuntu-16.04"
  #   runs-on: ubuntu-16.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status  
  #   - name: "install osquery"
  #     run: sudo sh scripts/install_osquery.sh      
  #   - name: "DFIR osquery list"
  #     run: sh scripts/dfir_osquery.sh   

  # ubuntu-1804-job:
  #   name: "osquery onubuntu-18.04"
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status  
  #   - name: "install osquery"
  #     run: sudo sh scripts/install_osquery.sh      
  #   - name: "DFIR osquery list"
  #     run: sh scripts/dfir_osquery.sh   

  # ubuntu-2004-job:
  #   name: "osquery on ubuntu-20.04"
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "install osquery"
  #     run: sudo sh scripts/install_osquery.sh      
  #   - name: "DFIR osquery list"
  #     run: sh scripts/dfir_osquery.sh        

  ubuntu-latest-job:
    name: "ansible on ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "check on ansible version"
      run: ansible --version

  ubuntu-latest-python-virtualenv-ansible-job:
    name: "python-virtualenv ansible on ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "build virtualenv ansible "
      run: sudo make virtualenv-ansible     
    - name: "ansible locally"
      run: |
        cat /etc/ansible/hosts
        ansible -m debug -a 'var=hostvars' localhost        
        ansible-inventory --inventory-file=inventory --list
        ansible-inventory --inventory-file=inventory --graph
        ansible-inventory --inventory-file=inventory --host localhost
        ansible-playbook playbooks/local.yml --check

  ubuntu-latest-python-virtualenv-ansible-playbook:
    name: "python-virtualenv ansible on ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "build virtualenv ansible "
      run: sudo make virtualenv-ansible     
    - name: "ansible locally"
      run: |
        cat /etc/ansible/hosts
        ansible-playbook playbooks/local.yml --check
        ansible -m debug -a 'var=hostvars' localhost        
        ansible-inventory --inventory-file=inventory --list
        ansible-inventory --inventory-file=inventory --graph
        ansible-inventory --inventory-file=inventory --host localhost
        ansible-playbook playbooks/local.yml --check

  ubuntu-latest-python-virtualenv-ansible-version-job:
    name: "python-virtualenv ansible(specific version) on ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "build virtualenv ansible version"
      run: sudo make virtualenv-ansible-specific     


  ubuntu-latest-snmpv3-job:
    name: "snmpv3 on ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "deploy snmp v3"
      run: sudo make deploy-snmpv3