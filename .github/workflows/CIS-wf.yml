name: "ubuntu CIS Benchmark CI workflow"


on:
  push:
    branches: [ test ]

jobs:

# https://ubuntu.com/security/certifications/docs/cis-installation
  ubuntu-1804-job:
    name: "CIS Ubuntu Linux 20.04 LTS Benchmark v1.1.0 - 03-31-2021"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    # - name: "install osquery"
    #   run: sudo sh scripts/install_osquery.sh      
    # - name: "DFIR osquery list"
    #   run: sh scripts/dfir_osquery.sh   
    - name: "1.1 Filesystem Configuration - 1.1.1 Disable unused filesystems"
      run: |
        # 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Automated)
        # Removing support for unneeded filesystem types reduces the local attack surface of the
        # server. If this filesystem type is not needed, disable it.
        modprobe -n -v cramfs | grep -E '(cramfs|install)'
        

  # ubuntu-latest-job:
  #   name: "ansible on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "check on ansible version"
  #     run: ansible --version

  # ubuntu-latest-python-virtualenv-ansible-job:
  #   name: "python-virtualenv ansible on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build virtualenv ansible "
  #     run: sudo make virtualenv-ansible     


  # ubuntu-latest-python-virtualenv-ansible-playbook:
  #   name: "python-virtualenv ansible playbook on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build virtualenv ansible "
  #     run: sudo make virtualenv-ansible     
  #   - name: "ansible locally"
  #     run: |
  #       # cat /etc/ansible/hosts #/etc/ansible/hosts: No such file or directory
  #       cat playbooks/localhost_playbook.yml 
  #       ansible-playbook playbooks/localhost_playbook.yml --check #dry-run mode
  #       ansible -m debug -a 'var=hostvars' localhost        
  #       ansible-inventory --inventory-file=inventory --list
  #       ansible-inventory --inventory-file=inventory --graph
  #       ansible-inventory --inventory-file=inventory --host localhost


  # ubuntu-latest-python-virtualenv-ansible-version-job:
  #   name: "python-virtualenv ansible(specific version) on ubuntu-latest"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build virtualenv ansible version"
  #     run: sudo make virtualenv-ansible-specific     


   
     
 